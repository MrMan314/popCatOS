ORG 0x7C00
BITS    16

BEGIN:
    CLI
	XOR		AX,		AX
	MOV		DS,		AX
	MOV		ES,		AX
	MOV		FS,		AX
	MOV		GS,		AX
	MOV		SS,		AX
	MOV		SP,		0x9000
	MOV		SP,		BP
	JMP 	0x0:MAIN

MAIN:
	MOV		[BD],	DL
	MOV		BX,		0x1000
	MOV		AL,		0x32
	MOV		DL,		[BD]
	MOV		CH,		0x00
	MOV		CL,		0x02
	MOV		DH,		0x00
	PUSH	AX
	PUSH	BX
	PUSH	CX
	PUSH	DX
	PUSH	AX
.RST:
	MOV		AH,		0x00
	INT		0x13
	JC		.RST
	MOV		AH,		0x02
	INT		0x13
	JC		.DISKERR
	POP		CX
	CMP		AL,		CL
	JNE		.DISKERR
	POP		DX
	POP		CX
	POP		BX
	POP		AX
	CLI
	LGDT	[GDTDESC]
	MOV		EAX,	CR0
	OR		AL,		1
	MOV		CR0,	EAX
	JMP		CODESEG:PMMAIN
	CLI
	HLT
.DISKERR:
    CLI
    HLT

GDTSTART:
	DD		0x0000
	DD		0x0000

GDTCODE:
	DW		0xFFFF
	DW		0x0000
	DB		0x0000
	DB		0x009A
	DB		0x00CF
	DB		0x0000

GDTDATA:
	DW		0xFFFF
	DW		0x0000
	DB		0x0000
	DB		0x0092
	DB		0x00CF
	DB		0x0000

GDTEND:

GDTDESC:
	DW		GDTEND - GDTSTART - 1
	DD		GDTSTART

CODESEG	EQU	GDTCODE-GDTSTART
DATASEG	EQU	GDTDATA-GDTSTART

BITS	32
PMMAIN:
	PUSHAD
	MOV		EDI,	0x112345
	MOV		ESI,	0x012345
	MOV		[ESI],	ESI
	MOV		[EDI],	EDI
	CMPSD
	POPAD
	JNE		.CONT
	IN		AL,		0x92
	OR		AL,		0x02
	OUT		0x92,	AL
	JMP		$
.CONT:
	MOV		AX,		0x10
	MOV		DS,		AX
	MOV		ES,		AX
	MOV		FS,		AX
	MOV		GS,		AX
	MOV		SS,		AX
	MOV		SP,		0x7C00
	JMP		0x8:	0x1000
	JMP		$

BD:			DB		    	0x0
TIMES		0x1FE-($-$$)DB	0x0
DW			0xAA55
